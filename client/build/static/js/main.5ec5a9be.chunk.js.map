{"version":3,"sources":["HomePage.js","GamePage.js","App.js","reportWebVitals.js","index.js"],"names":["NewGame","gameId","useState","joinGame","setJoinGame","className","process","onClick","to","HomePage","newGameId","setNewGameId","fetch","method","then","res","json","status","data","id","console","error","message","catch","bind","GamePage","useParams","socket","setSocket","joinFailed","setJoinFailed","side","setSide","pieces","setPieces","position","top","left","absPos","setAbsPos","draggedPiece","setDraggedPiece","squares","useMemo","i","square","row","Math","floor","col","piece","forEach","push","useEffect","mySocket","io","emit","on","reason","log","game","white","black","disconnect","page","useRef","trackPointer","e","offset","min","window","innerWidth","innerHeight","x","changedTouches","pageX","y","pageY","startDrag","pointerX","clientX","pointerY","clientY","elementId","document","elementFromPoint","find","preventDefault","endDrag","previousSquare","newPieces","slice","index","indexOf","Object","assign","moveDrag","pageElement","current","addEventListener","passive","removeEventListener","ref","map","player","type","style","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5ec5a9be.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nfunction HomePage() {\r\n\r\n  const [newGameId, setNewGameId] = useState('')\r\n\r\n  const createGame = () => {\r\n    fetch('game/create', {\r\n      method: 'POST',\r\n    }).then((res) => {\r\n      return res.json()\r\n    }).then((json) => {\r\n      if (json.status === 'success') {\r\n        setNewGameId(json.data.id)\r\n      } else if (json.status === 'error') {\r\n        console.error(json.message)\r\n      }\r\n    }).catch(console.error.bind(console))\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"sub-container\">\r\n        <h1>Chess</h1>\r\n        <p>\r\n          Play Chess with your friends!\r\n        </p>\r\n        <button onClick={createGame}>Create Game</button>\r\n      </div>\r\n      {newGameId !== '' && <NewGame gameId={newGameId}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NewGame({ gameId }) {\r\n  const [joinGame, setJoinGame] = useState(false)\r\n\r\n\treturn (\r\n    <div className=\"sub-container\">\r\n      <div className=\"m-1\">\r\n        Share this link with your opponent: <span className=\"copy-url\">{process.env.REACT_APP_BASEURL + '/game/' + gameId}</span>\r\n      </div>\r\n      <button onClick={() => setJoinGame(true)}>Join Game</button>\r\n      {joinGame && <Redirect to={'/game/' + gameId} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage","import { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport io from 'socket.io-client'\r\n\r\nfunction GamePage() {\r\n\tconst { gameId } = useParams()\r\n\tconst [socket, setSocket] = useState(null)\r\n\tconst [joinFailed, setJoinFailed] = useState(false)\r\n\tconst [side, setSide] = useState()\r\n\tconst [pieces, setPieces] = useState([])\r\n\tconst [absPos, setAbsPos] = useState({ position: 'absolute', top: 0, left: 0 })\r\n\tconst [draggedPiece, setDraggedPiece] = useState(null)\r\n\r\n\tconst squares = useMemo(() => {\r\n\t\tconst squares = []\r\n\t\tfor (let i = 0; i < 64; i++) {\r\n\t\t\tconst square = {}\r\n\t\t\t// set square.id using algebraic notation\r\n\t\t\tconst row = Math.floor(i / 8)\r\n\t\t\tconst col = i % 8\r\n\t\t\tsquare.id = (side === 'white') ? 'abcdefgh'[col] + (8 - row) : 'hgfedcba'[col] + (row + 1)\r\n\r\n\t\t\t// if there is a piece on this square, add a reference to the piece object\r\n\t\t\tsquare.piece = null\r\n\t\t\tpieces.forEach((piece) => {\r\n\t\t\t\tif (piece.square === square.id) {\r\n\t\t\t\t\tsquare.piece = piece\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tsquares.push(square)\r\n\t\t}\r\n\t\treturn squares\r\n\t}, [pieces, side])\r\n\r\n\t// initialize socket, connect to game\r\n\tuseEffect(() => {\r\n\t\tconst mySocket = io()\r\n\t\tmySocket.emit('join', gameId)\r\n\t\t\r\n\t\tmySocket.on('join failed', (reason) => {\r\n\t\t\tconsole.log('join failed: ' + reason)\r\n\t\t\tsetJoinFailed(true) // will cause redirect to home\r\n\t\t})\r\n\t\t\r\n\t\tmySocket.on('game data', (game) => {\r\n\t\t\tif (game.white === mySocket.id) {\r\n\t\t\t\tsetSide('white')\r\n\t\t\t} else if (game.black === mySocket.id) {\r\n\t\t\t\tsetSide('black')\r\n\t\t\t}\r\n\t\t\tsetPieces(game.pieces)\r\n\t\t})\r\n\r\n\t\tsetSocket(mySocket)\r\n\r\n\t\treturn function cleanup() {\r\n\t\t\tmySocket.disconnect()\r\n\t\t}\r\n\r\n\t}, [gameId])\r\n\r\n\t// using native DOM events to allow preventDefault() with TouchEvents (non-passive)\r\n\t// these events are for drag-and-dropping pieces\r\n\tconst page = useRef()\r\n\tuseEffect(() => {\r\n\r\n\t\tconst trackPointer = (e) => {\r\n\t\t\t// update the absolute position styling applied to the dragged piece\r\n\t\t\tconst offset = Math.min(window.innerWidth, window.innerHeight) / 16\r\n\t\t\tconst x = e.changedTouches ? e.changedTouches[0].pageX : e.pageX\r\n\t\t\tconst y = e.changedTouches ? e.changedTouches[0].pageY : e.pageY\r\n\t\t\tsetAbsPos({\r\n\t\t\t\tposition: 'absolute',\r\n\t\t\t\tleft: x - offset + 'px',\r\n\t\t\t\ttop: y - offset + 'px'\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t\tconst startDrag = (e) => {\r\n\t\t\t// find the square the pointer is over\r\n\t\t\tconst pointerX = e.changedTouches ? e.changedTouches[0].clientX : e.clientX\r\n\t\t\tconst pointerY = e.changedTouches ? e.changedTouches[0].clientY : e.clientY\r\n\t\t\tconst elementId = document.elementFromPoint(pointerX, pointerY).id\r\n\t\t\tconst square = squares.find((square) => square.id === elementId)\r\n\t\t\tif (square && square.piece) {\r\n\t\t\t\t// start dragging the piece on the square\r\n\t\t\t\te.preventDefault()\r\n\t\t\t\tsetDraggedPiece(square.piece)\r\n\t\t\t\ttrackPointer(e)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst endDrag = (e) => {\r\n\t\t\tif (draggedPiece) {\r\n\t\t\t\t// find the square the pointer is over\r\n\t\t\t\te.preventDefault()\r\n\t\t\t\tconst pointerX = e.changedTouches ? e.changedTouches[0].clientX : e.clientX\r\n\t\t\t\tconst pointerY = e.changedTouches ? e.changedTouches[0].clientY : e.clientY\r\n\t\t\t\tconst elementId = document.elementFromPoint(pointerX, pointerY).id\r\n\t\t\t\tconst square = squares.find((square) => {\r\n\t\t\t\t\treturn square.id === elementId\r\n\t\t\t\t})\r\n\t\t\t\tif (square && !square.piece) {\r\n\t\t\t\t\t// set the dropped piece's new square\r\n\t\t\t\t\tconst previousSquare = draggedPiece.square\r\n\t\t\t\t\tsetPieces((pieces) => {\r\n\t\t\t\t\t\tconst newPieces = pieces.slice()\r\n\t\t\t\t\t\tconst index = newPieces.indexOf(draggedPiece)\r\n\t\t\t\t\t\tnewPieces[index] = Object.assign(draggedPiece, { square: square.id })\r\n\t\t\t\t\t\treturn newPieces\r\n\t\t\t\t\t})\r\n\t\t\t\t\t// send the move to server\r\n\t\t\t\t\tsocket.emit('move', previousSquare, square.id)\r\n\t\t\t\t}\r\n\t\t\t\tsetDraggedPiece(null)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst moveDrag = (e) => {\r\n\t\t\tif (draggedPiece) {\r\n\t\t\t\te.preventDefault()\r\n\t\t\t\ttrackPointer(e)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst pageElement = page.current\r\n\t\tpageElement.addEventListener('touchmove', moveDrag, { passive: false })\r\n\t\tpageElement.addEventListener('mousemove', moveDrag)\r\n\t\tpageElement.addEventListener('touchstart', startDrag, { passive: false })\r\n\t\tpageElement.addEventListener('mousedown', startDrag)\r\n\t\tpageElement.addEventListener('touchend', endDrag, { passive: false })\r\n\t\tpageElement.addEventListener('mouseup', endDrag)\r\n\r\n\t\treturn (() => {\r\n\t\t\tpageElement.removeEventListener('touchmove', moveDrag, { passive: false })\r\n\t\t\tpageElement.removeEventListener('mousemove', moveDrag)\r\n\t\t\tpageElement.removeEventListener('touchstart', startDrag, { passive: false })\r\n\t\t\tpageElement.removeEventListener('mousedown', startDrag)\r\n\t\t\tpageElement.removeEventListener('touchend', endDrag, { passive: false })\r\n\t\t\tpageElement.removeEventListener('mouseup', endDrag)\r\n\t\t})\r\n\t}, [squares, draggedPiece, socket])\r\n\r\n\treturn (\r\n\t\t<div ref={page}>\r\n\t\t\t<h1>This is game {gameId}</h1>\r\n\t\t\t<h2>You are playing as {side}</h2>\r\n\t\t\t{joinFailed && <Redirect to=\"/\"/>}\r\n\r\n\t\t\t<div id=\"board\">\r\n\t\t\t\t{squares.map((square) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div id={square.id} className=\"square\" key={square.id}>\r\n\t\t\t\t\t\t\t{square.piece &&\r\n\t\t\t\t\t\t\t<div className={'piece ' + square.piece.player + '-' + square.piece.type}\r\n\t\t\t\t\t\t\t\tstyle={draggedPiece === square.piece ? absPos : {}}\r\n\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GamePage","import './App.css';\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport HomePage from './HomePage.js'\r\nimport GamePage from './GamePage.js'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/game/:gameId\">\r\n            <GamePage />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <Redirect to=\"/\"/>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}