{"version":3,"sources":["HomePage.js","GamePage.js","App.js","reportWebVitals.js","index.js"],"names":["NewGame","id","useState","joinGame","setJoinGame","className","process","onClick","to","HomePage","newGameId","setNewGameId","fetch","method","then","res","json","status","data","console","error","message","catch","bind","GamePage","useParams","joinFailed","setJoinFailed","side","setSide","useEffect","socket","io","emit","on","reason","log","game","white","black","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAmCA,SAASA,EAAT,GAA0B,IAAPC,EAAM,EAANA,GAAM,EACSC,oBAAS,GADlB,mBAChBC,EADgB,KACNC,EADM,KAGxB,OACG,sBAAKC,UAAU,gBAAf,UACE,sBAAKA,UAAU,MAAf,oDAEA,sBAAMA,UAAU,WAAhB,SAA4BC,uCAA2CL,OAEvE,wBAAQM,QAAS,kBAAMH,GAAY,IAAnC,uBACCD,GAAY,cAAC,IAAD,CAAUK,GAAI,SAAWP,OAK7BQ,MA/Cf,WAAqB,IAAD,EAEgBP,mBAAS,IAFzB,mBAEXQ,EAFW,KAEAC,EAFA,KAkBlB,OACE,sBAAKN,UAAU,iBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uCACA,8DAGA,wBAAQE,QArBK,WACjBK,MAAM,cAAe,CACnBC,OAAQ,SACPC,MAAK,SAACC,GACP,OAAOA,EAAIC,UACVF,MAAK,SAACE,GACa,YAAhBA,EAAKC,OACPN,EAAaK,EAAKE,KAAKjB,IACE,UAAhBe,EAAKC,QACdE,QAAQC,MAAMJ,EAAKK,YAEpBC,MAAMH,QAAQC,MAAMG,KAAKJ,WAUxB,4BAEa,KAAdT,GAAoB,cAACV,EAAD,CAASC,GAAIS,Q,iBCOzBc,MAjCf,WAAqB,IACZvB,EAAOwB,cAAPxB,GADW,EAEiBC,oBAAS,GAF1B,mBAEZwB,EAFY,KAEAC,EAFA,OAGKzB,mBAAS,MAHd,mBAGZ0B,EAHY,KAGNC,EAHM,KAwBnB,OAnBAC,qBAAU,WACT,IAAMC,EAASC,MACfD,EAAOE,KAAK,OAAQhC,GAEpB8B,EAAOG,GAAG,eAAe,SAACC,GACzBhB,QAAQiB,IAAI,gBAAkBD,GAC9BR,GAAc,MAGfI,EAAOG,GAAG,aAAa,SAACG,GACnBA,EAAKC,QAAUP,EAAO9B,GACzB4B,EAAQ,SACEQ,EAAKE,QAAUR,EAAO9B,IAChC4B,EAAQ,cAIR,CAAC5B,IAGH,gCACC,+CAAkBA,KAClB,qDAAwB2B,KACvBF,GAAc,cAAC,IAAD,CAAUlB,GAAG,UCJhBgC,MArBf,WAEE,OACE,cAAC,IAAD,UACE,qBAAKnC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoC,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUjC,GAAG,gBCRVmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.18bc715a.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nfunction HomePage() {\r\n\r\n  const [newGameId, setNewGameId] = useState('')\r\n\r\n  const createGame = () => {\r\n    fetch('game/create', {\r\n      method: 'POST',\r\n    }).then((res) => {\r\n      return res.json()\r\n    }).then((json) => {\r\n      if (json.status === 'success') {\r\n        setNewGameId(json.data.id)\r\n      } else if (json.status === 'error') {\r\n        console.error(json.message)\r\n      }\r\n    }).catch(console.error.bind(console))\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"sub-container\">\r\n        <h1>Chess</h1>\r\n        <p>\r\n          Play Chess with your friends!\r\n        </p>\r\n        <button onClick={createGame}>Create Game</button>\r\n      </div>\r\n      {newGameId !== '' && <NewGame id={newGameId}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NewGame({ id }) {\r\n  const [joinGame, setJoinGame] = useState(false)\r\n\r\n\treturn (\r\n    <div className=\"sub-container\">\r\n      <div className=\"m-1\">\r\n      Share this link with your opponent:&nbsp;\r\n      <span className=\"copy-url\">{process.env.REACT_APP_BASEURL + '/game/' + id}</span>\r\n      </div>\r\n      <button onClick={() => setJoinGame(true)}>Join Game</button>\r\n      {joinGame && <Redirect to={'/game/' + id} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage","import { useEffect, useState } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport io from 'socket.io-client'\r\n\r\nfunction GamePage() {\r\n\tconst { id } = useParams()\r\n\tconst [joinFailed, setJoinFailed] = useState(false)\r\n\tconst [side, setSide] = useState(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst socket = io()\r\n\t\tsocket.emit('join', id)\r\n\r\n\t\tsocket.on('join failed', (reason) => {\r\n\t\t\tconsole.log('join failed: ' + reason)\r\n\t\t\tsetJoinFailed(true)\r\n\t\t})\r\n\r\n\t\tsocket.on('game data', (game) => {\r\n\t\t\tif (game.white === socket.id) {\r\n\t\t\t\tsetSide('white')\r\n\t\t\t} else if (game.black === socket.id) {\r\n\t\t\t\tsetSide('black')\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}, [id])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>This is game {id}</h1>\r\n\t\t\t<h2>You are playing as {side}</h2>\r\n\t\t\t{joinFailed && <Redirect to=\"/\"/>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GamePage","import './App.css';\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport HomePage from './HomePage.js'\r\nimport GamePage from './GamePage.js'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/game/:id\">\r\n            <GamePage />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <Redirect to=\"/\"/>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}